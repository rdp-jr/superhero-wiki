{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Obee\\\\Desktop\\\\next-superhero\\\\pages\\\\characters\\\\[slug].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import Router from 'next/router'\nimport Head from \"next/head\";\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"../../components/Layout\";\nimport PowerstatsContainer from \"../../components/PowerstatsContainer\";\nimport _ from \"lodash\";\nimport Error from \"../_error\";\nimport { useContext } from 'react';\nimport { CharacterContext } from '../../components/CharacterContext';\nimport { useRouter } from 'next/router';\n\nvar Character = function Character() {\n  var _useContext = useContext(CharacterContext),\n      characters = _useContext.characters;\n\n  var router = useRouter();\n  var slug = router.query.slug;\n  console.log(\"slug: \".concat(slug));\n\n  var data = _.find(characters, {\n    'slug': slug\n  }); // if (statusCode === 404) {\n  //   return <Error statusCode={statusCode} />;\n  // }\n\n\n  var name = data.name;\n  var biography = data.biography;\n  var fullName = data.biography.fullName;\n  var publisher = data.biography.publisher;\n  var aliases = biography;\n  var appearance = data.appearance;\n  var work = data.work;\n  var connections = data.connections;\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, _.startCase(data.name), \" | Superhero Wiki\")), __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, name), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, fullName), __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, publisher), __jsx(PowerstatsContainer, {\n    stats: data.powerstats,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Place of Birth: \", biography.placeOfBirth), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"First Appearance: \", biography.firstAppearance), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Alter Egos: \", biography.alterEgos), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Aliases:\", biography.aliases ? biography.aliases.toString() : 'None'), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Occupation: \", work.occupation), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Base: \", work.base), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Group Affiliations: \", connections.groupAffiliation), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Relatives: \", connections.relatives)), __jsx(\"div\", {\n    className: \"col-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex justify-content-center pictureContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: data.images.md,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    className: \"d-flex justify-content-center flex-column align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, appearance.gender, \"\\u2022\", appearance.race ? appearance.race : \"Unknown race\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Height: \", appearance.height[0], \"/\", appearance.height[1]), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Weight: \", appearance.weight[0], \"/\", appearance.weight[1]), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"Alignment: \", _.startCase(biography.alignment)))))));\n}; // async function getInitialProps({ query, res }) {\n//   const id = query.slug.split(\"-\", 1)[0];\n//   const resp = await fetch(\n//     `https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${id}.json`\n//   );\n//   const data = await resp.json();\n//   if (query.slug === data.slug) {\n//     return { data, statusCode: 200 };\n//   }\n//   res.statusCode = 404;\n//   return { data: {}, statusCode: 404 };\n// }\n// Character.getInitialProps = getInitialProps;\n\n\nexport default Character;","map":{"version":3,"sources":["C:/Users/Obee/Desktop/next-superhero/pages/characters/[slug].js"],"names":["Head","fetch","Layout","PowerstatsContainer","_","Error","useContext","CharacterContext","useRouter","Character","characters","router","slug","query","console","log","data","find","name","biography","fullName","publisher","aliases","appearance","work","connections","startCase","powerstats","placeOfBirth","firstAppearance","alterEgos","toString","occupation","base","groupAffiliation","relatives","images","md","gender","race","height","weight","alignment"],"mappings":"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","sourcesContent":["// import Router from 'next/router'\r\nimport Head from \"next/head\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport Layout from \"../../components/Layout\";\r\nimport PowerstatsContainer from \"../../components/PowerstatsContainer\";\r\nimport _ from \"lodash\";\r\n\r\nimport Error from \"../_error\";\r\nimport { useContext } from 'react'\r\n\r\n\r\nimport { CharacterContext } from '../../components/CharacterContext'\r\nimport { useRouter } from 'next/router'\r\n\r\n\r\nconst Character = () => {\r\n  const { characters } = useContext(CharacterContext)\r\n  const router = useRouter()\r\n  const { slug } = router.query\r\n  console.log(`slug: ${slug}`)\r\n  const data = _.find(characters, {'slug': slug})\r\n  // if (statusCode === 404) {\r\n  //   return <Error statusCode={statusCode} />;\r\n  // }\r\n\r\n\r\n\r\n  const name = data.name;\r\n  const biography = data.biography;\r\n  const fullName = data.biography.fullName;\r\n  const publisher = data.biography.publisher;\r\n  const aliases = biography\r\n\r\n  const appearance = data.appearance;\r\n  const work = data.work;\r\n  const connections = data.connections;\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Head>\r\n          <title>{_.startCase(data.name)} | Superhero Wiki</title>\r\n        </Head>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <h1>{name}</h1>\r\n            <h3>{fullName}</h3>\r\n            <h5>{publisher}</h5>\r\n            <PowerstatsContainer stats={data.powerstats} />\r\n\r\n            <p>Place of Birth: {biography.placeOfBirth}</p>\r\n            <p>First Appearance: {biography.firstAppearance}</p>\r\n            <p>Alter Egos: {biography.alterEgos}</p>\r\n\r\n            <p>\r\n              Aliases:{biography.aliases ? biography.aliases.toString() : 'None'}\r\n            </p>\r\n\r\n            <p>Occupation: {work.occupation}</p>\r\n            <p>Base: {work.base}</p>\r\n\r\n            <p>Group Affiliations: {connections.groupAffiliation}</p>\r\n            <p>Relatives: {connections.relatives}</p>\r\n          </div>\r\n\r\n          <div className=\"col-6\">\r\n            <div className=\"d-flex justify-content-center pictureContainer\">\r\n              <img src={data.images.md} />\r\n            </div>\r\n            <div className=\"d-flex justify-content-center flex-column align-items-center\">\r\n              <p>\r\n                {appearance.gender}•{appearance.race ? appearance.race : \"Unknown race\"}\r\n              </p>\r\n              <p>\r\n                Height: {appearance.height[0]}/{appearance.height[1]}\r\n              </p>\r\n              <p>\r\n                Weight: {appearance.weight[0]}/{appearance.weight[1]}\r\n              </p>\r\n              <p>\r\n                Alignment: {_.startCase(biography.alignment)}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\n// async function getInitialProps({ query, res }) {\r\n//   const id = query.slug.split(\"-\", 1)[0];\r\n//   const resp = await fetch(\r\n//     `https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${id}.json`\r\n//   );\r\n//   const data = await resp.json();\r\n\r\n//   if (query.slug === data.slug) {\r\n//     return { data, statusCode: 200 };\r\n//   }\r\n//   res.statusCode = 404;\r\n//   return { data: {}, statusCode: 404 };\r\n// }\r\n\r\n// Character.getInitialProps = getInitialProps;\r\n\r\nexport default Character;\r\n"]},"metadata":{},"sourceType":"module"}
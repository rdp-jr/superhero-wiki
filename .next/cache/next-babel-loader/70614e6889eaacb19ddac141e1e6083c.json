{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\"; // import PowerstatsContainer from '../components/PowerstatsContainer'\n\nimport CharacterCard from \"../components/CharacterCard\";\nimport { idList } from \"../public/static/js/idList\";\nimport FilterResults from \"react-filter-search\";\nimport { useState, useContext } from 'react';\nimport { CharacterContext } from '../components/CharacterContext';\nlet currData = [];\n\nconst Index = () => {\n  const {\n    characters\n  } = useContext(CharacterContext); // console.log(characters)\n\n  const {\n    0: page,\n    1: setPage\n  } = useState(0);\n  const charactersList = characters ? characters.slice(page * 18, 18 * (page + 1)) : [];\n\n  const handleClick = direction => {\n    if (direction === 'back') {\n      if (page === 0) return;\n      setPage(prevState => prevState - 1);\n    } else if (direction === 'next') {\n      setPage(prevState => prevState + 1);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    id: \"gridTop\"\n  }), __jsx(Layout, null, __jsx(\"div\", {\n    className: \"row no-gutters\"\n  }, __jsx(\"div\", {\n    className: \"col\"\n  }), __jsx(\"div\", {\n    className: \"col-10 p-0\"\n  }, __jsx(\"div\", {\n    className: \"cardGrid\"\n  }, charactersList.map(character => __jsx(CharacterCard, {\n    data: character,\n    key: Math.random()\n  })))), __jsx(\"div\", {\n    className: \"col p-0\"\n  })), __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"d-flex justify-content-center mt-4 mb-4\"\n  }, __jsx(\"a\", {\n    href: \"#gridTop\",\n    className: \"btn btn-primary\",\n    onClick: () => handleClick('back')\n  }, \"Back\"), __jsx(\"a\", {\n    href: \"#gridTop\",\n    className: \"btn btn-primary ml-5\",\n    onClick: () => handleClick('next')\n  }, \"Next\")))));\n}; // async function getInitialProps({ query, res }) {\n//   currData = [];\n//   let resp = await fetch(\n//     `https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/all.json`\n//   );\n//   let data = await resp.json();\n//   return {\n//     data,\n//     statusCode: true ? 200 : 404,\n//   };\n// }\n// Index.getInitialProps = getInitialProps;\n\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}
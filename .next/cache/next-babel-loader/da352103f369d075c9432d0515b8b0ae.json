{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createContext, useEffect, useState } from 'react';\nimport fetch from 'isomorphic-unfetch';\nexport var CharacterContext = createContext();\n\nvar CharacterContextProvider = function CharacterContextProvider(props) {\n  var _useState = useState(),\n      characters = _useState[0],\n      setCharacters = _useState[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var resp, data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/all.json\"));\n\n            case 2:\n              resp = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(resp.json());\n\n            case 5:\n              data = _context.sent;\n              setCharacters(data);\n              console.log(data);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  return __jsx(CharacterContext.Provider, {\n    value: {\n      characters: characters\n    }\n  }, props.children);\n};\n\nexport default CharacterContextProvider;","map":null,"metadata":{},"sourceType":"module"}
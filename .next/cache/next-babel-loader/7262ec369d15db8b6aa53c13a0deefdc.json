{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Obee\\\\Desktop\\\\next-superhero\\\\pages\\\\characters\\\\[slug].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import Router from 'next/router'\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../components/Layout';\nimport PowerstatsContainer from '../../components/PowerstatsContainer';\nimport _ from 'lodash';\nimport Error from '../_error';\n\nvar Character = function Character(_ref) {\n  var statusCode = _ref.statusCode,\n      data = _ref.data;\n\n  if (statusCode === 404) {\n    return __jsx(Error, {\n      statusCode: statusCode,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 12\n      }\n    });\n  }\n\n  var name = data.name.toUpperCase();\n  var biography = data.biography;\n  var fullName = data.biography.fullName.toUpperCase();\n  var publisher = data.biography.publisher.toUpperCase();\n  var appearance = data.appearance;\n  var work = data.work;\n  var connections = data.connections;\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, _.startCase(data.name), \" | Superhero Wiki\")), __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: \"col-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, name), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, fullName), __jsx(PowerstatsContainer, {\n    stats: data.powerstats,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  }, \"Place of Birth: \", biography.placeOfBirth), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }\n  }, \"First Appearance: \", biography.firstAppearance), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }, \"Alter Egos: \", biography.alterEgos), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 3\n    }\n  }, \"Aliases: \", biography.aliases.map(function (alias) {\n    return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 48\n      }\n    }, alias);\n  })), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }\n  }, \"Occupation: \", work.occupation), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, \"Base: \", work.base), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }\n  }, \"Group Affliations: \", connections.groupAffliation), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }\n  }, \"Relatives: \", connections.relatives)), __jsx(\"div\", {\n    className: \"col-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }\n  }, __jsx(\"img\", {\n    src: data.images.md,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }\n  })), __jsx(\"div\", {\n    className: \"d-flex justify-content-center flex-column align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }\n  }, appearance.gender, \"\\u2022\", appearance.race), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }\n  }, \"Height: \", appearance.height[0], \"/\", appearance.height[1]), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }\n  }, \"Weight: \", appearance.weight[0], \"/\", appearance.weight[1]))))));\n}; // export async function getStaticPaths() {\n//   const res = await fetch('https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/all.json')\n//   // const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\n//   const characters = await res.json()\n//   const paths = characters.map(hero => ({\n//     params: {id: hero.id.toString()}\n//   }))\n//   // const paths = [params: {slug}]\n//   // const paths = [{ params: [...slug] }]\n//   console.log(paths)\n//   // const paths = {\n//   //   params: {\"slug\": slug}\n//   // }\n//   return { paths, fallback: false }\n// }\n// export async function getStaticProps({ params }) {\n//   console.log(`params: ${params.name}`)\n//   const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\n//   const data = await res.json()\n//   return { props: { data } }\n// }\n\n\nfunction getInitialProps(_ref2) {\n  var query, res, id, resp, data;\n  return _regeneratorRuntime.async(function getInitialProps$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query, res = _ref2.res;\n          id = query.slug.split('-', 1)[0];\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/\".concat(id, \".json\")));\n\n        case 4:\n          resp = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(resp.json());\n\n        case 7:\n          data = _context.sent;\n\n          if (!(query.slug === data.slug)) {\n            _context.next = 10;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            data: data,\n            statusCode: 200\n          });\n\n        case 10:\n          res.statusCode = 404;\n          return _context.abrupt(\"return\", {\n            data: {},\n            statusCode: 404\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nCharacter.getInitialProps = getInitialProps; // Character.getInitialProps = async ( {query} ) => {\n//   // console.log(query.slug.split('-', 1)[0])\n//   const id = query.slug.split('-', 1)[0]\n//   const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${id}.json`)\n//   const data = await res.json()\n//   // console.log(query)\n//   // const data = { }\n//   console.log(data)\n//   if (query.slug === data.slug) return { data } \n//   // Router.push('/')\n//   return { \"errorCode\" : 404}\n// }\n\nexport default Character;","map":{"version":3,"sources":["C:/Users/Obee/Desktop/next-superhero/pages/characters/[slug].js"],"names":["Head","fetch","Layout","PowerstatsContainer","_","Error","Character","statusCode","data","name","toUpperCase","biography","fullName","publisher","appearance","work","connections","startCase","powerstats","placeOfBirth","firstAppearance","alterEgos","aliases","map","alias","occupation","base","groupAffliation","relatives","images","md","gender","race","height","weight","getInitialProps","query","res","id","slug","split","resp","json"],"mappings":"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","sourcesContent":["// import Router from 'next/router'\r\nimport Head from 'next/head'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport Layout from '../../components/Layout'\r\nimport PowerstatsContainer from '../../components/PowerstatsContainer'\r\nimport _ from 'lodash'\r\n\r\nimport Error from '../_error'\r\n\r\nconst Character = ({statusCode, data}) => {\r\n  \r\n\r\n  if (statusCode === 404) {\r\n    return <Error statusCode={statusCode}/>\r\n  }\r\n\r\n  const name = data.name.toUpperCase();\r\n  const biography = data.biography\r\n  const fullName = data.biography.fullName.toUpperCase();\r\n  const publisher = data.biography.publisher.toUpperCase();\r\n\r\n  const appearance = data.appearance\r\n  const work = data.work\r\n  const connections = data.connections\r\n\r\n  return (\r\n    <>\r\n    <Layout>\r\n    <Head>\r\n      <title>{_.startCase(data.name)} | Superhero Wiki</title>\r\n    </Head>\r\n  \r\n  <div className=\"row\">\r\n  <div className=\"col-6\">\r\n  <h1>{name}</h1>\r\n  <h3>{fullName}</h3>\r\n  <PowerstatsContainer stats={data.powerstats}/>\r\n  \r\n  <p>Place of Birth: {biography.placeOfBirth}</p>\r\n  <p>First Appearance: {biography.firstAppearance}</p>\r\n  <p>Alter Egos: {biography.alterEgos}</p>\r\n\r\n  <p>Aliases: {biography.aliases.map(alias => (<p>{alias}</p>))}</p>\r\n  \r\n  <p>Occupation: {work.occupation}</p>\r\n  <p>Base: {work.base}</p>\r\n\r\n  <p>Group Affliations: {connections.groupAffliation}</p>\r\n  <p>Relatives: {connections.relatives}</p>\r\n\r\n  </div>\r\n  \r\n  <div className=\"col-6\">\r\n  <div className=\"d-flex justify-content-center\">\r\n  <img src={data.images.md}/>\r\n  </div>\r\n  <div className=\"d-flex justify-content-center flex-column align-items-center\">\r\n  <p>{appearance.gender}•{appearance.race}</p>\r\n  <p>Height: {appearance.height[0]}/{appearance.height[1]}</p>\r\n  <p>Weight: {appearance.weight[0]}/{appearance.weight[1]}</p>\r\n  </div>\r\n  </div>\r\n  \r\n  \r\n  \r\n  </div>\r\n  </Layout>\r\n  </>\r\n  )\r\n\r\n  \r\n\r\n}\r\n\r\n// export async function getStaticPaths() {\r\n\r\n//   const res = await fetch('https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/all.json')\r\n//   // const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\r\n\r\n//   const characters = await res.json()\r\n\r\n//   const paths = characters.map(hero => ({\r\n//     params: {id: hero.id.toString()}\r\n//   }))\r\n\r\n//   // const paths = [params: {slug}]\r\n\r\n//   // const paths = [{ params: [...slug] }]\r\n  \r\n//   console.log(paths)\r\n//   // const paths = {\r\n//   //   params: {\"slug\": slug}\r\n//   // }\r\n//   return { paths, fallback: false }\r\n// }\r\n\r\n// export async function getStaticProps({ params }) {\r\n//   console.log(`params: ${params.name}`)\r\n//   const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\r\n//   const data = await res.json()\r\n\r\n//   return { props: { data } }\r\n// }\r\n\r\n\r\nasync function getInitialProps({query, res}) {\r\n  const id = query.slug.split('-', 1)[0]\r\n  const resp = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${id}.json`)\r\n  const data = await resp.json()\r\n\r\n  if (query.slug === data.slug) {\r\n    return { data, statusCode: 200 } \r\n  } \r\n  res.statusCode = 404\r\n  return { data: {}, statusCode: 404 }\r\n  // return {\r\n  //   data: data || {},\r\n  //   statusCode: data ? 200 : 404\r\n  // }\r\n}\r\n\r\nCharacter.getInitialProps = getInitialProps\r\n\r\n// Character.getInitialProps = async ( {query} ) => {\r\n//   // console.log(query.slug.split('-', 1)[0])\r\n  \r\n//   const id = query.slug.split('-', 1)[0]\r\n//   const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${id}.json`)\r\n//   const data = await res.json()\r\n//   // console.log(query)\r\n//   // const data = { }\r\n//   console.log(data)\r\n//   if (query.slug === data.slug) return { data } \r\n//   // Router.push('/')\r\n//   return { \"errorCode\" : 404}\r\n// }\r\n\r\n\r\n\r\nexport default Character"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Obee\\\\Desktop\\\\next-superhero\\\\components\\\\PowerstatsContainer.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Powerstat from './Powerstat';\nimport NodeGroup from 'react-move/NodeGroup';\nimport PowerBar from './PowerBar'; // const data = [\n//   {\n//     id: 1,\n//     value: 23,\n//     name: 'Item 1'\n//   },\n//   {\n//     id: 2,\n//     value: 45,\n//     name: 'Item 2'\n//   },{\n//     id: 3,\n//     value: 69,\n//     name: 'Item 3'\n//   },\n// ]\n\nconst PowerstatsContainer = ({\n  stats\n}) => {\n  console.log(stats);\n  const statNames = Object.keys(stats);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, Object.keys(stats).map((key, index) => __jsx(PowerBar, {\n    name: statNames[index],\n    percent: stats[key],\n    key: Math.random(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }))); //   return (\n  //     <>\n  //     <h1 className=\"test\">hello</h1>\n  //     <PowerBar name=\"wtf\" width={500} percent={80}/>\n  //     </>\n  //   )\n}; // function BarGroup(props) {\n//   let barPadding = 2\n//   let barColour = '#348AA7'\n//   let widthScale = d => d * 10\n//   let width = widthScale(props.d.value)\n//   let yMid = props.barHeight * 0.5\n//   return <g className=\"bar-group\">\n//     <text className=\"name-label\" x=\"-6\" y={yMid} alignmentBaseline=\"middle\" >{props.d.name}</text>\n//     <rect y={barPadding * 0.5} width={width} height={props.barHeight - barPadding} fill={barColour} />\n//     <text className=\"value-label\" x={width- 8} y={yMid} alignmentBaseline=\"middle\" >{props.d.value}</text>\n//   </g>\n// }\n// class PowerstatsContainer extends React.Component {\n//   state = {\n//     data: [\n//       { name: 'Mon', value: 20 },\n//       { name: 'Tue', value: 40 },\n//       { name: 'Wed', value: 35 },\n//       { name: 'Thu', value: 50 },\n//       { name: 'Fri', value: 55 },\n//       { name: 'Sat', value: 40 },\n//       { name: 'Sun', value: 30 }\n//     ]\n//   }\n//   render() {\n//     let barHeight = 20\n//     let barGroups = this.state.data.map((d, i) => <g transform={`translate(0, ${i * barHeight})`}>\n//                                                     <BarGroup d={d} barHeight={barHeight} />\n//                                                   </g>)                         \n//     return <svg width=\"800\" height=\"300\" >\n//       <g className=\"container\">\n//         <text className=\"title\" x=\"10\" y=\"30\">Week beginning 9th July</text>\n//         <g className=\"chart\" transform=\"translate(100,60)\">\n//           {barGroups}\n//         </g>\n//       </g>\n//     </svg>\n//   }\n// }\n\n\nexport default PowerstatsContainer;","map":{"version":3,"sources":["C:/Users/Obee/Desktop/next-superhero/components/PowerstatsContainer.js"],"names":["Powerstat","NodeGroup","PowerBar","PowerstatsContainer","stats","console","log","statNames","Object","keys","map","key","index","Math","random"],"mappings":";;;AACA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AAEA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAMG,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYL,KAAZ,CAAlB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,MAAM,CAACC,IAAP,CAAYL,KAAZ,EAAmBM,GAAnB,CAAuB,CAACC,GAAD,EAAMC,KAAN,KAEtB,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEL,SAAS,CAACK,KAAD,CAAzB;AACY,IAAA,OAAO,EAAER,KAAK,CAACO,GAAD,CAD1B;AAEY,IAAA,GAAG,EAAEE,IAAI,CAACC,MAAL,EAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADH,CADF,CALuC,CAkBzC;AACA;AACA;AACA;AACA;AACA;AACC,CAxBD,C,CA2BA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeX,mBAAf","sourcesContent":["\r\nimport Powerstat from './Powerstat'\r\nimport NodeGroup from 'react-move/NodeGroup'\r\n\r\nimport PowerBar from './PowerBar'\r\n\r\n// const data = [\r\n//   {\r\n//     id: 1,\r\n//     value: 23,\r\n//     name: 'Item 1'\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     value: 45,\r\n//     name: 'Item 2'\r\n//   },{\r\n//     id: 3,\r\n//     value: 69,\r\n//     name: 'Item 3'\r\n//   },\r\n// ]\r\n\r\nconst PowerstatsContainer = ({stats}) => {\r\n  console.log(stats)\r\n\r\n  const statNames = Object.keys(stats)\r\n\r\n  return (\r\n    <div>\r\n      {Object.keys(stats).map((key, index) => \r\n        (\r\n        <PowerBar name={statNames[index]} \r\n                    percent={stats[key]}\r\n                    key={Math.random()}\r\n                    />\r\n        ))}\r\n        \r\n    </div>\r\n  )\r\n\r\n//   return (\r\n//     <>\r\n//     <h1 className=\"test\">hello</h1>\r\n//     <PowerBar name=\"wtf\" width={500} percent={80}/>\r\n//     </>\r\n//   )\r\n}\r\n\r\n\r\n// function BarGroup(props) {\r\n//   let barPadding = 2\r\n//   let barColour = '#348AA7'\r\n//   let widthScale = d => d * 10\r\n\r\n//   let width = widthScale(props.d.value)\r\n//   let yMid = props.barHeight * 0.5\r\n  \r\n//   return <g className=\"bar-group\">\r\n//     <text className=\"name-label\" x=\"-6\" y={yMid} alignmentBaseline=\"middle\" >{props.d.name}</text>\r\n//     <rect y={barPadding * 0.5} width={width} height={props.barHeight - barPadding} fill={barColour} />\r\n//     <text className=\"value-label\" x={width- 8} y={yMid} alignmentBaseline=\"middle\" >{props.d.value}</text>\r\n//   </g>\r\n// }\r\n\r\n\r\n\r\n// class PowerstatsContainer extends React.Component {\r\n//   state = {\r\n//     data: [\r\n//       { name: 'Mon', value: 20 },\r\n//       { name: 'Tue', value: 40 },\r\n//       { name: 'Wed', value: 35 },\r\n//       { name: 'Thu', value: 50 },\r\n//       { name: 'Fri', value: 55 },\r\n//       { name: 'Sat', value: 40 },\r\n//       { name: 'Sun', value: 30 }\r\n//     ]\r\n//   }\r\n\r\n//   render() {\r\n//     let barHeight = 20\r\n        \r\n//     let barGroups = this.state.data.map((d, i) => <g transform={`translate(0, ${i * barHeight})`}>\r\n//                                                     <BarGroup d={d} barHeight={barHeight} />\r\n//                                                   </g>)                         \r\n    \r\n\r\n//     return <svg width=\"800\" height=\"300\" >\r\n//       <g className=\"container\">\r\n//         <text className=\"title\" x=\"10\" y=\"30\">Week beginning 9th July</text>\r\n//         <g className=\"chart\" transform=\"translate(100,60)\">\r\n//           {barGroups}\r\n//         </g>\r\n//       </g>\r\n//     </svg>\r\n//   }\r\n// }\r\n\r\nexport default PowerstatsContainer\r\n"]},"metadata":{},"sourceType":"module"}
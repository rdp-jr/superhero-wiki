{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Obee\\\\Desktop\\\\next-superhero\\\\pages\\\\characters\\\\[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import Router from 'next/router'\nimport Head from \"next/head\";\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"../../components/Layout\";\nimport PowerstatsContainer from \"../../components/PowerstatsContainer\";\nimport _ from \"lodash\";\nimport Error from \"../_error\";\n\nconst Character = ({\n  statusCode,\n  data\n}) => {\n  if (statusCode === 404) {\n    return __jsx(Error, {\n      statusCode: statusCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const name = data.name.toUpperCase();\n  const biography = data.biography;\n  const fullName = data.biography.fullName.toUpperCase();\n  const publisher = data.biography.publisher.toUpperCase();\n  const appearance = data.appearance;\n  const work = data.work;\n  const connections = data.connections;\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, _.startCase(data.name), \" | Superhero Wiki\")), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, name), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, fullName), __jsx(PowerstatsContainer, {\n    stats: data.powerstats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Place of Birth: \", biography.placeOfBirth), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"First Appearance: \", biography.firstAppearance), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Alter Egos: \", biography.alterEgos), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Aliases:\", \" \", biography.aliases.map(alias => __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, alias))), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Occupation: \", work.occupation), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Base: \", work.base), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Group Affliations: \", connections.groupAffliation), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Relatives: \", connections.relatives)), __jsx(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: data.images.md,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    className: \"d-flex justify-content-center flex-column align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, appearance.gender, \"\\u2022\", appearance.race), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"Height: \", appearance.height[0], \"/\", appearance.height[1]), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"Weight: \", appearance.weight[0], \"/\", appearance.weight[1]))))));\n}; // export async function getStaticPaths() {\n//   const res = await fetch('https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/all.json')\n//   // const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\n//   const characters = await res.json()\n//   const paths = characters.map(hero => ({\n//     params: {id: hero.id.toString()}\n//   }))\n//   // const paths = [params: {slug}]\n//   // const paths = [{ params: [...slug] }]\n//   console.log(paths)\n//   // const paths = {\n//   //   params: {\"slug\": slug}\n//   // }\n//   return { paths, fallback: false }\n// }\n// export async function getStaticProps({ params }) {\n//   console.log(`params: ${params.name}`)\n//   const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\n//   const data = await res.json()\n//   return { props: { data } }\n// }\n\n\nasync function getInitialProps({\n  query,\n  res\n}) {\n  const id = query.slug.split(\"-\", 1)[0];\n  const resp = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${id}.json`);\n  const data = await resp.json();\n\n  if (query.slug === data.slug) {\n    return {\n      data,\n      statusCode: 200\n    };\n  }\n\n  res.statusCode = 404;\n  return {\n    data: {},\n    statusCode: 404\n  }; // return {\n  //   data: data || {},\n  //   statusCode: data ? 200 : 404\n  // }\n}\n\nCharacter.getInitialProps = getInitialProps; // Character.getInitialProps = async ( {query} ) => {\n//   // console.log(query.slug.split('-', 1)[0])\n//   const id = query.slug.split('-', 1)[0]\n//   const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${id}.json`)\n//   const data = await res.json()\n//   // console.log(query)\n//   // const data = { }\n//   console.log(data)\n//   if (query.slug === data.slug) return { data }\n//   // Router.push('/')\n//   return { \"errorCode\" : 404}\n// }\n\nexport default Character;","map":{"version":3,"sources":["C:/Users/Obee/Desktop/next-superhero/pages/characters/[slug].js"],"names":["Head","fetch","Layout","PowerstatsContainer","_","Error","Character","statusCode","data","name","toUpperCase","biography","fullName","publisher","appearance","work","connections","startCase","powerstats","placeOfBirth","firstAppearance","alterEgos","aliases","map","alias","occupation","base","groupAffliation","relatives","images","md","gender","race","height","weight","getInitialProps","query","res","id","slug","split","resp","json"],"mappings":";;;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,KAAP,MAAkB,WAAlB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA0B;AAC1C,MAAID,UAAU,KAAK,GAAnB,EAAwB;AACtB,WAAO,MAAC,KAAD;AAAO,MAAA,UAAU,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,QAAME,IAAI,GAAGD,IAAI,CAACC,IAAL,CAAUC,WAAV,EAAb;AACA,QAAMC,SAAS,GAAGH,IAAI,CAACG,SAAvB;AACA,QAAMC,QAAQ,GAAGJ,IAAI,CAACG,SAAL,CAAeC,QAAf,CAAwBF,WAAxB,EAAjB;AACA,QAAMG,SAAS,GAAGL,IAAI,CAACG,SAAL,CAAeE,SAAf,CAAyBH,WAAzB,EAAlB;AAEA,QAAMI,UAAU,GAAGN,IAAI,CAACM,UAAxB;AACA,QAAMC,IAAI,GAAGP,IAAI,CAACO,IAAlB;AACA,QAAMC,WAAW,GAAGR,IAAI,CAACQ,WAAzB;AAEA,SACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQZ,CAAC,CAACa,SAAF,CAAYT,IAAI,CAACC,IAAjB,CAAR,sBADF,CADF,EAKE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,QAAL,CAFF,EAGE,MAAC,mBAAD;AAAqB,IAAA,KAAK,EAAEJ,IAAI,CAACU,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoBP,SAAS,CAACQ,YAA9B,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAsBR,SAAS,CAACS,eAAhC,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBT,SAAS,CAACU,SAA1B,CAPF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACW,GADX,EAEGV,SAAS,CAACW,OAAV,CAAkBC,GAAlB,CAAuBC,KAAD,IACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAL,CADD,CAFH,CATF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBT,IAAI,CAACU,UAArB,CAhBF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUV,IAAI,CAACW,IAAf,CAjBF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAuBV,WAAW,CAACW,eAAnC,CAnBF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeX,WAAW,CAACY,SAA3B,CApBF,CADF,EAwBE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEpB,IAAI,CAACqB,MAAL,CAAYC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,8DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,UAAU,CAACiB,MADd,YACuBjB,UAAU,CAACkB,IADlC,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACWlB,UAAU,CAACmB,MAAX,CAAkB,CAAlB,CADX,OACkCnB,UAAU,CAACmB,MAAX,CAAkB,CAAlB,CADlC,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACWnB,UAAU,CAACoB,MAAX,CAAkB,CAAlB,CADX,OACkCpB,UAAU,CAACoB,MAAX,CAAkB,CAAlB,CADlC,CAPF,CAJF,CAxBF,CALF,CADF,CADF;AAmDD,CAjED,C,CAmEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,eAAeC,eAAf,CAA+B;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAA/B,EAA+C;AAC7C,QAAMC,EAAE,GAAGF,KAAK,CAACG,IAAN,CAAWC,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,EAAyB,CAAzB,CAAX;AACA,QAAMC,IAAI,GAAG,MAAMxC,KAAK,CACrB,4DAA2DqC,EAAG,OADzC,CAAxB;AAGA,QAAM9B,IAAI,GAAG,MAAMiC,IAAI,CAACC,IAAL,EAAnB;;AAEA,MAAIN,KAAK,CAACG,IAAN,KAAe/B,IAAI,CAAC+B,IAAxB,EAA8B;AAC5B,WAAO;AAAE/B,MAAAA,IAAF;AAAQD,MAAAA,UAAU,EAAE;AAApB,KAAP;AACD;;AACD8B,EAAAA,GAAG,CAAC9B,UAAJ,GAAiB,GAAjB;AACA,SAAO;AAAEC,IAAAA,IAAI,EAAE,EAAR;AAAYD,IAAAA,UAAU,EAAE;AAAxB,GAAP,CAX6C,CAY7C;AACA;AACA;AACA;AACD;;AAEDD,SAAS,CAAC6B,eAAV,GAA4BA,eAA5B,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe7B,SAAf","sourcesContent":["// import Router from 'next/router'\r\nimport Head from \"next/head\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport Layout from \"../../components/Layout\";\r\nimport PowerstatsContainer from \"../../components/PowerstatsContainer\";\r\nimport _ from \"lodash\";\r\n\r\nimport Error from \"../_error\";\r\n\r\nconst Character = ({ statusCode, data }) => {\r\n  if (statusCode === 404) {\r\n    return <Error statusCode={statusCode} />;\r\n  }\r\n\r\n  const name = data.name.toUpperCase();\r\n  const biography = data.biography;\r\n  const fullName = data.biography.fullName.toUpperCase();\r\n  const publisher = data.biography.publisher.toUpperCase();\r\n\r\n  const appearance = data.appearance;\r\n  const work = data.work;\r\n  const connections = data.connections;\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Head>\r\n          <title>{_.startCase(data.name)} | Superhero Wiki</title>\r\n        </Head>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <h1>{name}</h1>\r\n            <h3>{fullName}</h3>\r\n            <PowerstatsContainer stats={data.powerstats} />\r\n\r\n            <p>Place of Birth: {biography.placeOfBirth}</p>\r\n            <p>First Appearance: {biography.firstAppearance}</p>\r\n            <p>Alter Egos: {biography.alterEgos}</p>\r\n\r\n            <p>\r\n              Aliases:{\" \"}\r\n              {biography.aliases.map((alias) => (\r\n                <h5>{alias}</h5>\r\n              ))}\r\n            </p>\r\n\r\n            <p>Occupation: {work.occupation}</p>\r\n            <p>Base: {work.base}</p>\r\n\r\n            <p>Group Affliations: {connections.groupAffliation}</p>\r\n            <p>Relatives: {connections.relatives}</p>\r\n          </div>\r\n\r\n          <div className=\"col-6\">\r\n            <div className=\"d-flex justify-content-center\">\r\n              <img src={data.images.md} />\r\n            </div>\r\n            <div className=\"d-flex justify-content-center flex-column align-items-center\">\r\n              <p>\r\n                {appearance.gender}•{appearance.race}\r\n              </p>\r\n              <p>\r\n                Height: {appearance.height[0]}/{appearance.height[1]}\r\n              </p>\r\n              <p>\r\n                Weight: {appearance.weight[0]}/{appearance.weight[1]}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\n// export async function getStaticPaths() {\r\n\r\n//   const res = await fetch('https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/all.json')\r\n//   // const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\r\n\r\n//   const characters = await res.json()\r\n\r\n//   const paths = characters.map(hero => ({\r\n//     params: {id: hero.id.toString()}\r\n//   }))\r\n\r\n//   // const paths = [params: {slug}]\r\n\r\n//   // const paths = [{ params: [...slug] }]\r\n\r\n//   console.log(paths)\r\n//   // const paths = {\r\n//   //   params: {\"slug\": slug}\r\n//   // }\r\n//   return { paths, fallback: false }\r\n// }\r\n\r\n// export async function getStaticProps({ params }) {\r\n//   console.log(`params: ${params.name}`)\r\n//   const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\r\n//   const data = await res.json()\r\n\r\n//   return { props: { data } }\r\n// }\r\n\r\nasync function getInitialProps({ query, res }) {\r\n  const id = query.slug.split(\"-\", 1)[0];\r\n  const resp = await fetch(\r\n    `https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${id}.json`\r\n  );\r\n  const data = await resp.json();\r\n\r\n  if (query.slug === data.slug) {\r\n    return { data, statusCode: 200 };\r\n  }\r\n  res.statusCode = 404;\r\n  return { data: {}, statusCode: 404 };\r\n  // return {\r\n  //   data: data || {},\r\n  //   statusCode: data ? 200 : 404\r\n  // }\r\n}\r\n\r\nCharacter.getInitialProps = getInitialProps;\r\n\r\n// Character.getInitialProps = async ( {query} ) => {\r\n//   // console.log(query.slug.split('-', 1)[0])\r\n\r\n//   const id = query.slug.split('-', 1)[0]\r\n//   const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${id}.json`)\r\n//   const data = await res.json()\r\n//   // console.log(query)\r\n//   // const data = { }\r\n//   console.log(data)\r\n//   if (query.slug === data.slug) return { data }\r\n//   // Router.push('/')\r\n//   return { \"errorCode\" : 404}\r\n// }\r\n\r\nexport default Character;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Obee\\\\Desktop\\\\next-superhero\\\\pages\\\\characters\\\\[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import { useRouter } from 'next/router'\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../components/Layout';\nimport PowerstatsContainer from '../../components/PowerstatsContainer'; // import useSWR from 'swr'\n\nconst Character = ({\n  data\n}) => {\n  // const router = useRouter()\n  // const { id } = router.query\n  // console.log(`id:${id}`)\n  // return (\n  //   <h1>{id}</h1>\n  // )\n  // const { data, error } = useSWR('https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${id}.json', fetch)\n  // console.log(slug.split('-', 1))\n  // const id = slug.split('-', 1)[0]\n  // if (error) return <div>failed to load</div>\n  // if (!data) return <div>loading...</div>\n  // return (\n  //   <>\n  //   <Layout>\n  //   <Head>\n  //     <title>{data.name}</title>\n  //   </Head>\n  // <h1>{data.name}</h1>\n  // <PowerstatsContainer stats={data.powerstats}/>\n  // </Layout>\n  // </>\n  // )\n  return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, \"slug page\");\n}; // export async function getStaticPaths() {\n//   const res = await fetch('https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/all.json')\n//   // const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\n//   const characters = await res.json()\n//   const paths = characters.map(hero => ({\n//     params: {id: hero.id.toString()}\n//   }))\n//   // const paths = [params: {slug}]\n//   // const paths = [{ params: [...slug] }]\n//   console.log(paths)\n//   // const paths = {\n//   //   params: {\"slug\": slug}\n//   // }\n//   return { paths, fallback: false }\n// }\n// export async function getStaticProps({ params }) {\n//   console.log(`params: ${params.name}`)\n//   const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\n//   const data = await res.json()\n//   return { props: { data } }\n// }\n\n\nCharacter.getInitialProps = async ({\n  query\n}) => {\n  // console.log(query.toString().split('-', 1)[0])\n  console.log(query.toString()); // const id = query.split('-', 1)[0]\n  // const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${id}.json`)\n  // const data = await res.json()\n  // console.log(query)\n\n  const data = {}; // console.log(data)\n\n  return {\n    data\n  };\n};\n\nexport default Character;","map":{"version":3,"sources":["C:/Users/Obee/Desktop/next-superhero/pages/characters/[slug].js"],"names":["Head","fetch","Layout","PowerstatsContainer","Character","data","getInitialProps","query","console","log","toString"],"mappings":";;;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,mBAAP,MAAgC,sCAAhC,C,CACA;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF;AAID,CAjCD,C,CAmCA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;AAEAD,SAAS,CAACE,eAAV,GAA4B,OAAQ;AAACC,EAAAA;AAAD,CAAR,KAAqB;AAC/C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,EAAZ,EAF+C,CAG/C;AACA;AACA;AACA;;AACA,QAAML,IAAI,GAAG,EAAb,CAP+C,CAQ/C;;AACA,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD,CAZD;;AAgBA,eAAeD,SAAf","sourcesContent":["// import { useRouter } from 'next/router'\r\nimport Head from 'next/head'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport Layout from '../../components/Layout'\r\nimport PowerstatsContainer from '../../components/PowerstatsContainer'\r\n// import useSWR from 'swr'\r\n\r\nconst Character = ({data}) => {\r\n  // const router = useRouter()\r\n  // const { id } = router.query\r\n  // console.log(`id:${id}`)\r\n  // return (\r\n  //   <h1>{id}</h1>\r\n  // )\r\n\r\n  // const { data, error } = useSWR('https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${id}.json', fetch)\r\n  \r\n  // console.log(slug.split('-', 1))\r\n  // const id = slug.split('-', 1)[0]\r\n\r\n  // if (error) return <div>failed to load</div>\r\n  // if (!data) return <div>loading...</div>\r\n  \r\n  // return (\r\n  //   <>\r\n  //   <Layout>\r\n  //   <Head>\r\n  //     <title>{data.name}</title>\r\n  //   </Head>\r\n  \r\n  // <h1>{data.name}</h1>\r\n  // <PowerstatsContainer stats={data.powerstats}/>\r\n  // </Layout>\r\n  // </>\r\n  // )\r\n\r\n  return (\r\n    <h1>slug page</h1>\r\n  )\r\n\r\n}\r\n\r\n// export async function getStaticPaths() {\r\n\r\n//   const res = await fetch('https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/all.json')\r\n//   // const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\r\n\r\n//   const characters = await res.json()\r\n\r\n//   const paths = characters.map(hero => ({\r\n//     params: {id: hero.id.toString()}\r\n//   }))\r\n\r\n//   // const paths = [params: {slug}]\r\n\r\n//   // const paths = [{ params: [...slug] }]\r\n  \r\n//   console.log(paths)\r\n//   // const paths = {\r\n//   //   params: {\"slug\": slug}\r\n//   // }\r\n//   return { paths, fallback: false }\r\n// }\r\n\r\n// export async function getStaticProps({ params }) {\r\n//   console.log(`params: ${params.name}`)\r\n//   const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\r\n//   const data = await res.json()\r\n\r\n//   return { props: { data } }\r\n// }\r\n\r\nCharacter.getInitialProps = async ( {query} ) => {\r\n  // console.log(query.toString().split('-', 1)[0])\r\n  console.log(query.toString())\r\n  // const id = query.split('-', 1)[0]\r\n  // const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${id}.json`)\r\n  // const data = await res.json()\r\n  // console.log(query)\r\n  const data = { }\r\n  // console.log(data)\r\n  return {\r\n    data\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Character"]},"metadata":{},"sourceType":"module"}
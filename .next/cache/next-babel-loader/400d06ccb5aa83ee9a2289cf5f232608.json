{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Obee\\\\Desktop\\\\next-superhero\\\\pages\\\\characters\\\\[slug].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import Router from 'next/router'\nimport Head from \"next/head\";\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"../../components/Layout\";\nimport PowerstatsContainer from \"../../components/PowerstatsContainer\";\nimport _ from \"lodash\";\nimport Error from \"../_error\";\n\nvar Character = function Character(_ref) {\n  var statusCode = _ref.statusCode,\n      data = _ref.data;\n\n  if (statusCode === 404) {\n    return __jsx(Error, {\n      statusCode: statusCode,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 12\n      }\n    });\n  }\n\n  var name = data.name.toUpperCase();\n  var biography = data.biography;\n  var fullName = data.biography.fullName.toUpperCase();\n  var publisher = data.biography.publisher.toUpperCase();\n  var aliases = biography;\n  var appearance = data.appearance;\n  var work = data.work;\n  var connections = data.connections;\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, _.startCase(data.name), \" | Superhero Wiki\")), __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, name), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, fullName), __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, publisher), __jsx(PowerstatsContainer, {\n    stats: data.powerstats,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Place of Birth: \", biography.placeOfBirth), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"First Appearance: \", biography.firstAppearance), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Alter Egos: \", biography.alterEgos), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Aliases:\", biography.aliases.toString()), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Occupation: \", work.occupation), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Base: \", work.base), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Group Affiliations: \", connections.groupAffiliation), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Relatives: \", connections.relatives)), __jsx(\"div\", {\n    className: \"col-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: data.images.md,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    className: \"d-flex justify-content-center flex-column align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, appearance.gender, \"\\u2022\", appearance.race ? appearance.race : \"Unknown race\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"Height: \", appearance.height[0], \"/\", appearance.height[1]), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"Weight: \", appearance.weight[0], \"/\", appearance.weight[1]), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Alignment: \", _.startCase('-')))))));\n}; // export async function getStaticPaths() {\n//   const res = await fetch('https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/all.json')\n//   // const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\n//   const characters = await res.json()\n//   const paths = characters.map(hero => ({\n//     params: {id: hero.id.toString()}\n//   }))\n//   // const paths = [params: {slug}]\n//   // const paths = [{ params: [...slug] }]\n//   console.log(paths)\n//   // const paths = {\n//   //   params: {\"slug\": slug}\n//   // }\n//   return { paths, fallback: false }\n// }\n// export async function getStaticProps({ params }) {\n//   console.log(`params: ${params.name}`)\n//   const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\n//   const data = await res.json()\n//   return { props: { data } }\n// }\n\n\nfunction getInitialProps(_ref2) {\n  var query, res, id, resp, data;\n  return _regeneratorRuntime.async(function getInitialProps$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query, res = _ref2.res;\n          id = query.slug.split(\"-\", 1)[0];\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/\".concat(id, \".json\")));\n\n        case 4:\n          resp = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(resp.json());\n\n        case 7:\n          data = _context.sent;\n\n          if (!(query.slug === data.slug)) {\n            _context.next = 10;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            data: data,\n            statusCode: 200\n          });\n\n        case 10:\n          res.statusCode = 404;\n          return _context.abrupt(\"return\", {\n            data: {},\n            statusCode: 404\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nCharacter.getInitialProps = getInitialProps; // Character.getInitialProps = async ( {query} ) => {\n//   // console.log(query.slug.split('-', 1)[0])\n//   const id = query.slug.split('-', 1)[0]\n//   const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${id}.json`)\n//   const data = await res.json()\n//   // console.log(query)\n//   // const data = { }\n//   console.log(data)\n//   if (query.slug === data.slug) return { data }\n//   // Router.push('/')\n//   return { \"errorCode\" : 404}\n// }\n\nexport default Character;","map":{"version":3,"sources":["C:/Users/Obee/Desktop/next-superhero/pages/characters/[slug].js"],"names":["Head","fetch","Layout","PowerstatsContainer","_","Error","Character","statusCode","data","name","toUpperCase","biography","fullName","publisher","aliases","appearance","work","connections","startCase","powerstats","placeOfBirth","firstAppearance","alterEgos","toString","occupation","base","groupAffiliation","relatives","images","md","gender","race","height","weight","getInitialProps","query","res","id","slug","split","resp","json"],"mappings":"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","sourcesContent":["// import Router from 'next/router'\r\nimport Head from \"next/head\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport Layout from \"../../components/Layout\";\r\nimport PowerstatsContainer from \"../../components/PowerstatsContainer\";\r\nimport _ from \"lodash\";\r\n\r\nimport Error from \"../_error\";\r\n\r\nconst Character = ({ statusCode, data }) => {\r\n  if (statusCode === 404) {\r\n    return <Error statusCode={statusCode} />;\r\n  }\r\n\r\n  const name = data.name.toUpperCase();\r\n  const biography = data.biography;\r\n  const fullName = data.biography.fullName.toUpperCase();\r\n  const publisher = data.biography.publisher.toUpperCase();\r\n  const aliases = biography\r\n\r\n  const appearance = data.appearance;\r\n  const work = data.work;\r\n  const connections = data.connections;\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Head>\r\n          <title>{_.startCase(data.name)} | Superhero Wiki</title>\r\n        </Head>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <h1>{name}</h1>\r\n            <h3>{fullName}</h3>\r\n            <h5>{publisher}</h5>\r\n            <PowerstatsContainer stats={data.powerstats} />\r\n\r\n            <p>Place of Birth: {biography.placeOfBirth}</p>\r\n            <p>First Appearance: {biography.firstAppearance}</p>\r\n            <p>Alter Egos: {biography.alterEgos}</p>\r\n\r\n            <p>\r\n              Aliases:{biography.aliases.toString()}\r\n            </p>\r\n\r\n            <p>Occupation: {work.occupation}</p>\r\n            <p>Base: {work.base}</p>\r\n\r\n            <p>Group Affiliations: {connections.groupAffiliation}</p>\r\n            <p>Relatives: {connections.relatives}</p>\r\n          </div>\r\n\r\n          <div className=\"col-6\">\r\n            <div className=\"d-flex justify-content-center\">\r\n              <img src={data.images.md} />\r\n            </div>\r\n            <div className=\"d-flex justify-content-center flex-column align-items-center\">\r\n              <p>\r\n                {appearance.gender}•{appearance.race ? appearance.race : \"Unknown race\"}\r\n              </p>\r\n              <p>\r\n                Height: {appearance.height[0]}/{appearance.height[1]}\r\n              </p>\r\n              <p>\r\n                Weight: {appearance.weight[0]}/{appearance.weight[1]}\r\n              </p>\r\n              <p>\r\n                Alignment: {_.startCase('-')}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\n// export async function getStaticPaths() {\r\n\r\n//   const res = await fetch('https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/all.json')\r\n//   // const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\r\n\r\n//   const characters = await res.json()\r\n\r\n//   const paths = characters.map(hero => ({\r\n//     params: {id: hero.id.toString()}\r\n//   }))\r\n\r\n//   // const paths = [params: {slug}]\r\n\r\n//   // const paths = [{ params: [...slug] }]\r\n\r\n//   console.log(paths)\r\n//   // const paths = {\r\n//   //   params: {\"slug\": slug}\r\n//   // }\r\n//   return { paths, fallback: false }\r\n// }\r\n\r\n// export async function getStaticProps({ params }) {\r\n//   console.log(`params: ${params.name}`)\r\n//   const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\r\n//   const data = await res.json()\r\n\r\n//   return { props: { data } }\r\n// }\r\n\r\nasync function getInitialProps({ query, res }) {\r\n  const id = query.slug.split(\"-\", 1)[0];\r\n  const resp = await fetch(\r\n    `https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${id}.json`\r\n  );\r\n  const data = await resp.json();\r\n\r\n  if (query.slug === data.slug) {\r\n    return { data, statusCode: 200 };\r\n  }\r\n  res.statusCode = 404;\r\n  return { data: {}, statusCode: 404 };\r\n  // return {\r\n  //   data: data || {},\r\n  //   statusCode: data ? 200 : 404\r\n  // }\r\n}\r\n\r\nCharacter.getInitialProps = getInitialProps;\r\n\r\n// Character.getInitialProps = async ( {query} ) => {\r\n//   // console.log(query.slug.split('-', 1)[0])\r\n\r\n//   const id = query.slug.split('-', 1)[0]\r\n//   const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${id}.json`)\r\n//   const data = await res.json()\r\n//   // console.log(query)\r\n//   // const data = { }\r\n//   console.log(data)\r\n//   if (query.slug === data.slug) return { data }\r\n//   // Router.push('/')\r\n//   return { \"errorCode\" : 404}\r\n// }\r\n\r\nexport default Character;\r\n"]},"metadata":{},"sourceType":"module"}
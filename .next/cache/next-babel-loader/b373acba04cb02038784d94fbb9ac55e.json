{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Obee\\\\Desktop\\\\next-superhero\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\"; // import PowerstatsContainer from '../components/PowerstatsContainer'\n\nimport CharacterCard from \"../components/CharacterCard\";\nimport { idList } from \"../public/static/js/idList\";\nimport FilterResults from \"react-filter-search\";\nimport { useState } from 'react'; // console.log(idList)\n\nlet currData = []; // let num = 30\n//no 501 entry\n\nconst Index = ({\n  data\n}) => {\n  // console.log(data)\n  const {\n    0: page,\n    1: setPage\n  } = useState(0); // const [characters, setCharacters] = useState(data.slice(0,18))\n  // const [characters, setCharacters] = useState(data.slice(page * 18,18 * (page + 1)))\n\n  const characters = data.slice(page * 18, 18 * (page + 1)); // data.slice(page,18 * (page + 1)).map((character) => {\n  //   console.log(character.name)\n  // })\n\n  const handleClick = () => {\n    setPage(prevState => prevState + 1); // setCharacters(data.slice(18, 36))\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"row no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: \"col-10 p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"cardGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, characters.map(character => __jsx(CharacterCard, {\n    data: character,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  })))), __jsx(\"div\", {\n    className: \"col p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })), __jsx(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"asd\")));\n};\n\nasync function getInitialProps({\n  query,\n  res\n}) {\n  currData = [];\n\n  try {\n    let resp = await fetch( // `https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/502.json`\n    `https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/all.json`);\n    let data = await resp.json();\n    return {\n      data,\n      statusCode: true ? 200 : 404\n    }; // currData.push(data);\n  } catch (error) {\n    console.log(\"Error!\");\n  } // for (let i = 1; i < 2; i++) {\n  //   try {\n  //     let resp = await fetch(\n  //       `https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${i}.json`\n  //       // `https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/all.json`\n  //     );\n  //     let data = await resp.json();\n  //     currData.push(data)\n  //   } catch (error) {\n  //     console.log(`Error! on ${i}`)\n  //   }\n  // }\n  // if (query.slug === data.slug) {\n  //   return { data, statusCode: 200 };\n  // }\n  // res.statusCode = 404;\n  // return { data: {}, statusCode: 404 };\n\n\n  return {\n    data: currData,\n    statusCode: true ? 200 : 404\n  };\n}\n\nIndex.getInitialProps = getInitialProps;\nexport default Index;","map":{"version":3,"sources":["C:/Users/Obee/Desktop/next-superhero/pages/index.js"],"names":["Layout","Link","fetch","CharacterCard","idList","FilterResults","useState","currData","Index","data","page","setPage","characters","slice","handleClick","prevState","map","character","getInitialProps","query","res","resp","json","statusCode","error","console","log"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CACA;;AACA,IAAIC,QAAQ,GAAG,EAAf,C,CACA;AACA;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC1B;AAEA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAC,CAAD,CAAhC,CAH0B,CAK1B;AACA;;AACA,QAAMM,UAAU,GAAGH,IAAI,CAACI,KAAL,CAAWH,IAAI,GAAG,EAAlB,EAAqB,MAAMA,IAAI,GAAG,CAAb,CAArB,CAAnB,CAP0B,CAQ1B;AACA;AACA;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACxBH,IAAAA,OAAO,CAACI,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAP,CADwB,CAExB;AACD,GAHD;;AAIA,SACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGH,UAAU,CAACI,GAAX,CAAgBC,SAAD,IAChB,MAAC,aAAD;AAAe,IAAA,IAAI,EAAEA,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,CAXH,CADF,CAFF,EAmBE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CAFF,EAwBE;AAAQ,IAAA,OAAO,EAAEH,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAxBF,CADF,CADF;AA8BD,CA9CD;;AAgDA,eAAeI,eAAf,CAA+B;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAA/B,EAA+C;AAC7Cb,EAAAA,QAAQ,GAAG,EAAX;;AAEA,MAAI;AACF,QAAIc,IAAI,GAAG,MAAMnB,KAAK,EACpB;AACC,oEAFmB,CAAtB;AAIA,QAAIO,IAAI,GAAG,MAAMY,IAAI,CAACC,IAAL,EAAjB;AAEA,WAAO;AACLb,MAAAA,IADK;AAELc,MAAAA,UAAU,EAAE,OAAO,GAAP,GAAa;AAFpB,KAAP,CAPE,CAaF;AACD,GAdD,CAcE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,GAnB4C,CAqB7C;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;AACA,SAAO;AACLjB,IAAAA,IAAI,EAAEF,QADD;AAELgB,IAAAA,UAAU,EAAE,OAAO,GAAP,GAAa;AAFpB,GAAP;AAID;;AAEDf,KAAK,CAACU,eAAN,GAAwBA,eAAxB;AAEA,eAAeV,KAAf","sourcesContent":["import Layout from \"../components/Layout\";\r\nimport Link from \"next/link\";\r\nimport fetch from \"isomorphic-unfetch\";\r\n// import PowerstatsContainer from '../components/PowerstatsContainer'\r\nimport CharacterCard from \"../components/CharacterCard\";\r\nimport { idList } from \"../public/static/js/idList\";\r\nimport FilterResults from \"react-filter-search\";\r\nimport { useState } from 'react'\r\n// console.log(idList)\r\nlet currData = [];\r\n// let num = 30\r\n//no 501 entry\r\nconst Index = ({ data }) => {\r\n  // console.log(data)\r\n\r\n  const [page, setPage] = useState(0)\r\n\r\n  // const [characters, setCharacters] = useState(data.slice(0,18))\r\n  // const [characters, setCharacters] = useState(data.slice(page * 18,18 * (page + 1)))\r\n  const characters = data.slice(page * 18,18 * (page + 1))\r\n  // data.slice(page,18 * (page + 1)).map((character) => {\r\n  //   console.log(character.name)\r\n  // })\r\n\r\n  const handleClick = () => {\r\n    setPage(prevState => prevState + 1)\r\n    // setCharacters(data.slice(18, 36))\r\n  }\r\n  return (\r\n    <>\r\n      <Layout>\r\n        {/* <Link href=\"/characters/[slug]\" as=\"/characters/502-one-punch-man\"><a>One Punch Man</a></Link> */}\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col\"></div>\r\n          <div className=\"col-10 p-0\">\r\n            <div className=\"cardGrid\">\r\n              {/* {data.splice(2).map((character) => (\r\n                <CharacterCard data={character} />\r\n              ))} */}\r\n              {/* <CharacterCard data={data[1]}/>\r\n              <CharacterCard data={data[0]}/> */}\r\n\r\n              {/* {data.slice(page,18 * (page + 1)).map((character) => (\r\n                <CharacterCard data={character} />\r\n                ))} */}\r\n\r\n              {characters.map((character) => (\r\n              <CharacterCard data={character} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"col p-0\"></div>\r\n        </div>\r\n\r\n        <button onClick={handleClick}>asd</button>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nasync function getInitialProps({ query, res }) {\r\n  currData = [];\r\n\r\n  try {\r\n    let resp = await fetch(\r\n      // `https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/502.json`\r\n      `https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/all.json`\r\n    );\r\n    let data = await resp.json();\r\n\r\n    return {\r\n      data,\r\n      statusCode: true ? 200 : 404,\r\n    };\r\n\r\n\r\n    // currData.push(data);\r\n  } catch (error) {\r\n    console.log(\"Error!\");\r\n  }\r\n\r\n  // for (let i = 1; i < 2; i++) {\r\n\r\n  //   try {\r\n  //     let resp = await fetch(\r\n  //       `https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${i}.json`\r\n  //       // `https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/all.json`\r\n  //     );\r\n  //     let data = await resp.json();\r\n\r\n  //     currData.push(data)\r\n\r\n  //   } catch (error) {\r\n  //     console.log(`Error! on ${i}`)\r\n  //   }\r\n\r\n  // }\r\n\r\n  // if (query.slug === data.slug) {\r\n  //   return { data, statusCode: 200 };\r\n  // }\r\n  // res.statusCode = 404;\r\n  // return { data: {}, statusCode: 404 };\r\n  return {\r\n    data: currData,\r\n    statusCode: true ? 200 : 404,\r\n  };\r\n}\r\n\r\nIndex.getInitialProps = getInitialProps;\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}
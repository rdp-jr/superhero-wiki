{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import Router from 'next/router'\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../components/Layout';\nimport PowerstatsContainer from '../../components/PowerstatsContainer'; // import useSWR from 'swr'\n\nimport Error from 'next/error'; // import Router from 'next/dist/next-server/server/router'\n\nvar Character = function Character(_ref) {\n  var errorCode = _ref.errorCode,\n      data = _ref.data;\n\n  // const router = useRouter()\n  // const { id } = router.query\n  // console.log(`id:${id}`)\n  // return (\n  //   <h1>{id}</h1>\n  // )\n  // const { data, error } = useSWR('https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${id}.json', fetch)\n  // console.log(slug.split('-', 1))\n  // const id = slug.split('-', 1)[0]\n  // if (error) return <div>failed to load</div>\n  // if (!data) return <div>loading...</div>\n  // if (errorCode) {\n  //   router.push('/')\n  //   // return <Error statusCode={errorCode}/>\n  // }\n  if (errorCode) {\n    return __jsx(Error, {\n      statusCode: errorCode\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Layout, null, __jsx(Head, null, __jsx(\"title\", null, data.name)), __jsx(\"h1\", null, data.name), __jsx(PowerstatsContainer, {\n    stats: data.powerstats\n  })));\n}; // export async function getStaticPaths() {\n//   const res = await fetch('https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/all.json')\n//   // const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\n//   const characters = await res.json()\n//   const paths = characters.map(hero => ({\n//     params: {id: hero.id.toString()}\n//   }))\n//   // const paths = [params: {slug}]\n//   // const paths = [{ params: [...slug] }]\n//   console.log(paths)\n//   // const paths = {\n//   //   params: {\"slug\": slug}\n//   // }\n//   return { paths, fallback: false }\n// }\n// export async function getStaticProps({ params }) {\n//   console.log(`params: ${params.name}`)\n//   const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\n//   const data = await res.json()\n//   return { props: { data } }\n// }\n\n\nCharacter.getInitialProps = function _callee(_ref2) {\n  var query, id, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query;\n          // console.log(query.slug.split('-', 1)[0])\n          id = query.slug.split('-', 1)[0];\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/\".concat(id, \".json\")));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          data = _context.sent;\n          // console.log(query)\n          // const data = { }\n          console.log(data);\n\n          if (!(query.slug === data.slug)) {\n            _context.next = 11;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 11:\n          return _context.abrupt(\"return\", {\n            \"errorCode\": 404\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Character;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Obee\\\\Desktop\\\\next-superhero\\\\pages\\\\characters\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../components/Layout';\nimport PowerstatsContainer from '../../components/PowerstatsContainer';\nimport useSWR from 'swr';\n\nconst Character = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  console.log(id);\n  const {\n    data,\n    error\n  } = useSWR('https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${id}.json', fetch); // console.log(slug.split('-', 1))\n  // const id = slug.split('-', 1)[0]\n\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, \"failed to load\");\n  if (!data) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }, \"loading...\");\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, data.name)), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }, data.name), __jsx(PowerstatsContainer, {\n    stats: data.powerstats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  })));\n}; // export async function getStaticPaths() {\n//   const res = await fetch('https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/all.json')\n//   // const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\n//   const characters = await res.json()\n//   const paths = characters.map(hero => ({\n//     params: {id: hero.id.toString()}\n//   }))\n//   console.log(paths)\n//   // const paths = {\n//   //   params: {\"slug\": slug}\n//   // }\n//   return { paths, fallback: false }\n// }\n// export async function getStaticProps({ params }) {\n//   console.log(`params: ${params.name}`)\n//   const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\n//   const character = await res.json()\n//   return { props: { character } }\n// }\n// Character.getInitialProps = async ( {params} ) => {\n//   const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\n//   const data = await res.json()\n//   console.log(data)\n//   return {\n//     data\n//   }\n// }\n\n\nexport default Character;","map":{"version":3,"sources":["C:/Users/Obee/Desktop/next-superhero/pages/characters/[id].js"],"names":["useRouter","Head","fetch","Layout","PowerstatsContainer","useSWR","Character","router","id","query","console","log","data","error","name","powerstats"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AAEA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBR,MAAM,CAAC,qEAAD,EAAwEH,KAAxE,CAA9B,CALsB,CAMtB;AACA;;AAEA,MAAIW,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEX,SACE,4BACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,IAAI,CAACE,IAAb,CADF,CADA,EAKF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAI,CAACE,IAAV,CALE,EAMF,MAAC,mBAAD;AAAqB,IAAA,KAAK,EAAEF,IAAI,CAACG,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANE,CADA,CADF;AAYD,CAxBD,C,CA0BA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeT,SAAf","sourcesContent":["import { useRouter } from 'next/router'\r\nimport Head from 'next/head'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport Layout from '../../components/Layout'\r\nimport PowerstatsContainer from '../../components/PowerstatsContainer'\r\nimport useSWR from 'swr'\r\n\r\nconst Character = () => {\r\n  const router = useRouter()\r\n  const { id } = router.query\r\n  console.log(id)\r\n\r\n  const { data, error } = useSWR('https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${id}.json', fetch)\r\n  // console.log(slug.split('-', 1))\r\n  // const id = slug.split('-', 1)[0]\r\n\r\n  if (error) return <div>failed to load</div>\r\n  if (!data) return <div>loading...</div>\r\n  \r\n  return (\r\n    <>\r\n    <Layout>\r\n    <Head>\r\n      <title>{data.name}</title>\r\n    </Head>\r\n  {/* <p>{slug}</p> */}\r\n  <h1>{data.name}</h1>\r\n  <PowerstatsContainer stats={data.powerstats}/>\r\n  </Layout>\r\n  </>\r\n  )\r\n}\r\n\r\n// export async function getStaticPaths() {\r\n\r\n//   const res = await fetch('https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/all.json')\r\n//   // const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\r\n\r\n//   const characters = await res.json()\r\n\r\n//   const paths = characters.map(hero => ({\r\n//     params: {id: hero.id.toString()}\r\n//   }))\r\n  \r\n//   console.log(paths)\r\n//   // const paths = {\r\n//   //   params: {\"slug\": slug}\r\n//   // }\r\n//   return { paths, fallback: false }\r\n// }\r\n\r\n// export async function getStaticProps({ params }) {\r\n//   console.log(`params: ${params.name}`)\r\n//   const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\r\n//   const character = await res.json()\r\n\r\n//   return { props: { character } }\r\n// }\r\n\r\n// Character.getInitialProps = async ( {params} ) => {\r\n//   const res = await fetch(`https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/id/${params.id}.json`)\r\n//   const data = await res.json()\r\n//   console.log(data)\r\n//   return {\r\n//     data\r\n//   }\r\n// }\r\n\r\nexport default Character"]},"metadata":{},"sourceType":"module"}